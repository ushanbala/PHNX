
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN LPAREN RPAREN SEMICOLON STRING VARIABLE\n    statement : VARIABLE ASSIGN expression SEMICOLON\n    \n    statement : VARIABLE LPAREN expression RPAREN SEMICOLON\n    \n    expression : VARIABLE\n    \n    expression : STRING\n    '
    
_lr_action_items = {'VARIABLE':([0,3,4,],[2,5,5,]),'$end':([1,9,11,],[0,-1,-2,]),'ASSIGN':([2,],[3,]),'LPAREN':([2,],[4,]),'STRING':([3,4,],[7,7,]),'SEMICOLON':([5,6,7,10,],[-3,9,-4,11,]),'RPAREN':([5,7,8,],[-3,-4,10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([3,4,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VARIABLE ASSIGN expression SEMICOLON','statement',4,'p_statement_assignment','compiler.py',53),
  ('statement -> VARIABLE LPAREN expression RPAREN SEMICOLON','statement',5,'p_statement_function_call','compiler.py',59),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','compiler.py',65),
  ('expression -> STRING','expression',1,'p_expression_string','compiler.py',71),
]
